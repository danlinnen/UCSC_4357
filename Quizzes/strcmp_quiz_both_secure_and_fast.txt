//Daniel Linnen
//Quiz 1

int strcmpfast(char so[], char si[]){
	int i=0;
	while(so[i] != '\0'){
		if(so[i] >= si[i]){
			return 1;
		}
		else{
			return -1;
		}
		i++;
	}
	return 0
}

//This will return quickly, but a quicker way is to just compare in the single loop or to use multiple statements in a row to avoid branching... or to assume 8 byte aligned architecture and compare as unsigned 64 bit integers for speed sake.

#define STRINGMAX 1024  // define a maximum string length

int strcmpsecure(char so[], char si[]){
	int i=0;
	int comparison = 1;
	int comparison_dummy = 0;
	int flag_end_of_either_string = 0;
	int flag_end_of_neither_string = 1;
        for(i=0;i<STRINGMAX;i++){
		if(flag_end_of_either_string != 1){                // If in bounds of the strin use as valid for comparison.
			if(so[i] != si[i]){comparison = 0;}        // If the strings fail the comparison
		}
		if(flag_end_of_neither_string != 1){               // comparison to keep time constant.
			if(so[i] != si[i]){comparison_dummy = 0;}  // keep time constant regardless of string length
		}
		if(so[i] == '\0' || so[i] == '\0'){flag_end_of_either_string = 1;flag_end_of_neither_string = 0;}
	}
	return comparison;
}






















		

