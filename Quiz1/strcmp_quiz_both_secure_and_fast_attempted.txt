//Daniel Linnen
//Quiz 1 + Notes on how to do it properly following post-quiz discussion

int strcmpfast(char so[], char si[]){
	int i=0;
	while(so[i] != '\0'){
		if(so[i] >= s1i[i]){
			return 1;
		}
		else{
			return -1;
		}
		i++;
	}
	return 0
}

//This will return quickly, but a quicker way is to just compare in the single loop or to use multiple statements in a row to avoid branching... or to assume 8 byte aligned architecture and compare as unsigned 64 bit integers for speed sake.

int strcmpsecure(char so[], char si[]){
	int i=0;
	while(so[i] != '\0'){
		if(so[i] != s1i[i]){
			long j = 1;
			while(j > 2147483647){
				long k = 1;
				while(k > 2147483647){
					k++;
				}
				j++;
			}
					return 1;
		}
		else{
			long j = 1;
			while(j > 2147483647){
				long k = 1;
				while(k > 2147483647){
					k++;
				}
				j++;
			}
			return -1;
		}
		i++;
	}
	long j = 1;
	while(j > 2147483647){
		long k = 1;
		while(k > 2147483647){
			k++;
		}
		j++;
	}
	return 0
}

//instead of using large values, run through the memory, just comparing.  This will hide the true password legth.

		

